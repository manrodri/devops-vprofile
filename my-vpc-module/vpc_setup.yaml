- hosts: localhost
  connection: local
  gather_facts: False
  module_defaults:
    group/aws:
      aws_profile: jenkins
  tasks:
    - name: Import VPC Variables
      include_vars: vars/variables-setup

    - name: create vprofile vpc
      ec2_vpc_net:
        profile: "{{ profile }}"
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpcCidr }}"
        region: "{{ region }}"
        dns_hostnames: yes
        dns_support: yes
        tenancy: default
        state: "{{ state }}"
      register: vpcout

    - name: create Public Subnet 1 in Zone 1
      ec2_vpc_subnet:
        profile: "{{ profile }}"
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        cidr: "{{ PubSub1Cidr }}"
        state: "{{ state }}"
        map_public: yes
        resource_tags:
          Name: vprofile-public1
      register: pubsub1_out


    - name: create Public subnet 2 in zone2
      ec2_vpc_subnet:
          vpc_id: "{{ vpcout.vpc.id }}"
          region: "{{ region }}"
          az: "{{ zone2 }}"
          state: "{{state}}"
          cidr: "{{ PubSub2Cidr }}"
          map_public: yes
          resource_tags:
            Name: vprofile_pubsub2
      register: pubsub2_out

    - name: create Public subnet 3 in zone3
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        state: "{{state}}"
        cidr: "{{ PubSub3Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile_pubsub3
      register: pubsub3_out

    - name: create Private Subnet 1 in Zone1
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        state: "{{state}}"
        cidr: "{{ PrivSub1Cidr }}"
        resource_tags:
          Name: vprofile_privsub1
      register: privsub1_out

    - name: create Private subnet 2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        state: "{{state}}"
        cidr: "{{ PrivSub2Cidr }}"
        resource_tags:
          Name: vprofile_privsub2
      register: privsub2_out

    - name: create Private subnet 3 in zone3
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        state: "{{state}}"
        cidr: "{{ PrivSub3Cidr }}"
        resource_tags:
          Name: vprofile_privsub3
      register: privsub3_out

    - name: Create Internet gateway with tags
      ec2_vpc_igw:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: "{{ state }}"
        tags:
            Name: vprofile-igw
      register: igw

    - name: create public route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: "{{ state }}"
        tags:
          Name: PublicVprofileRT
        subnets:
          - "{{ pubsub3_out.subnet.id }}"
          - "{{ pubsub1_out.subnet.id }}"
          - "{{ pubsub2_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
      register: publicRT


#    - name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.
#      ec2_vpc_nat_gateway:
#        state: present
#        subnet_id: "{{ privsub3_out.subnet.id }}"
#        wait: true
#        region: "{{ region }}"
#        if_exist_do_not_create: true
#      register: nat_gateway

    - name: create private route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: "{{ state }}"
        tags:
          Name: PrivateVprofileRT

        subnets:
          - "{{ privsub3_out.subnet.id }}"
          - "{{ privsub2_out.subnet.id }}"
          - "{{ privsub1_out.subnet.id }}"
      register: privateRT

    - set_fact:
        vpc_id: "{{ vpcout.vpc.id }}"
        public_subnet_1_id: "{{ pubsub1_out.subnet.id }}"
        public_subnet_2_id: "{{ pubsub2_out.subnet.id }}"
        public_subnet_3_id: "{{ pubsub3_out.subnet.id }}"
        private_subnet_1_id: "{{ privsub1_out.subnet.id }}"
        private_subnet_2_id: "{{ privsub2_out.subnet.id }}"
        private_subnet_3_id: "{{ privsub3_out.subnet.id }}"
        igw_id: "{{ igw.gateway_id }}"
        publicRT_id: "{{publicRT.route_table.id}}"
        privateRT_id: "{{privateRT.route_table.id}}"
        cachable: yes
    - name: copy facts to a file
      copy:
        content: "vpc_id: {{ vpcout.vpc.id }}\npublic_subnet_1_id: {{ pubsub1_out.subnet.id }}\npublic_subnet_2_id: {{ pubsub2_out.subnet.id }}\npublic_subnet_3_id: {{ pubsub3_out.subnet.id }}"
        dest: vars/output_vars
